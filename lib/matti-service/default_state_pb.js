/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.CreateDefaultStateRequest', null, global);
goog.exportSymbol('proto.CreateDefaultStateResponse', null, global);
goog.exportSymbol('proto.DefaultState', null, global);
goog.exportSymbol('proto.ExecuteDefaultStateRequest', null, global);
goog.exportSymbol('proto.ExecuteDefaultStateResponse', null, global);
goog.exportSymbol('proto.FetchDefaultStateByIdRequest', null, global);
goog.exportSymbol('proto.FetchDefaultStateByIdResponse', null, global);
goog.exportSymbol('proto.FetchDefaultStateBySlugRequest', null, global);
goog.exportSymbol('proto.FetchDefaultStateBySlugResponse', null, global);
goog.exportSymbol('proto.FetchDefaultStatesRequest', null, global);
goog.exportSymbol('proto.InsertKvmConnectionToDefaultStateRequest', null, global);
goog.exportSymbol('proto.InsertKvmConnectionToDefaultStateResponse', null, global);
goog.exportSymbol('proto.InsertVideoConnectionToDefaultStateRequest', null, global);
goog.exportSymbol('proto.InsertVideoConnectionToDefaultStateResponse', null, global);
goog.exportSymbol('proto.RemoveDefaultStateRequest', null, global);
goog.exportSymbol('proto.RemoveDefaultStateResponse', null, global);
goog.exportSymbol('proto.RemoveKvmConnectionFromDefaultStateRequest', null, global);
goog.exportSymbol('proto.RemoveKvmConnectionFromDefaultStateResponse', null, global);
goog.exportSymbol('proto.RemoveVideoConnectionFromDefaultStateRequest', null, global);
goog.exportSymbol('proto.RemoveVideoConnectionFromDefaultStateResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DefaultState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DefaultState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DefaultState.displayName = 'proto.DefaultState';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DefaultState.prototype.toObject = function(opt_includeInstance) {
  return proto.DefaultState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DefaultState} msg The msg instance to transform.
 * @return {!Object}
 */
proto.DefaultState.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    slug: jspb.Message.getFieldWithDefault(msg, 2, ""),
    matrixid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DefaultState}
 */
proto.DefaultState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DefaultState;
  return proto.DefaultState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DefaultState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DefaultState}
 */
proto.DefaultState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatrixid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DefaultState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DefaultState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DefaultState} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.DefaultState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMatrixid();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.DefaultState.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DefaultState.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string slug = 2;
 * @return {string}
 */
proto.DefaultState.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.DefaultState.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 matrixId = 3;
 * @return {number}
 */
proto.DefaultState.prototype.getMatrixid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.DefaultState.prototype.setMatrixid = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FetchDefaultStatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FetchDefaultStatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FetchDefaultStatesRequest.displayName = 'proto.FetchDefaultStatesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FetchDefaultStatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.FetchDefaultStatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FetchDefaultStatesRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.FetchDefaultStatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FetchDefaultStatesRequest}
 */
proto.FetchDefaultStatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FetchDefaultStatesRequest;
  return proto.FetchDefaultStatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FetchDefaultStatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FetchDefaultStatesRequest}
 */
proto.FetchDefaultStatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FetchDefaultStatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FetchDefaultStatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FetchDefaultStatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.FetchDefaultStatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 offset = 1;
 * @return {number}
 */
proto.FetchDefaultStatesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FetchDefaultStatesRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.FetchDefaultStatesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FetchDefaultStatesRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FetchDefaultStateByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FetchDefaultStateByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FetchDefaultStateByIdRequest.displayName = 'proto.FetchDefaultStateByIdRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FetchDefaultStateByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.FetchDefaultStateByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FetchDefaultStateByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.FetchDefaultStateByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FetchDefaultStateByIdRequest}
 */
proto.FetchDefaultStateByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FetchDefaultStateByIdRequest;
  return proto.FetchDefaultStateByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FetchDefaultStateByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FetchDefaultStateByIdRequest}
 */
proto.FetchDefaultStateByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FetchDefaultStateByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FetchDefaultStateByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FetchDefaultStateByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.FetchDefaultStateByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.FetchDefaultStateByIdRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FetchDefaultStateByIdRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FetchDefaultStateByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FetchDefaultStateByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FetchDefaultStateByIdResponse.displayName = 'proto.FetchDefaultStateByIdResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FetchDefaultStateByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.FetchDefaultStateByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FetchDefaultStateByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.FetchDefaultStateByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstate: (f = msg.getDefaultstate()) && proto.DefaultState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FetchDefaultStateByIdResponse}
 */
proto.FetchDefaultStateByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FetchDefaultStateByIdResponse;
  return proto.FetchDefaultStateByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FetchDefaultStateByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FetchDefaultStateByIdResponse}
 */
proto.FetchDefaultStateByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DefaultState;
      reader.readMessage(value,proto.DefaultState.deserializeBinaryFromReader);
      msg.setDefaultstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FetchDefaultStateByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FetchDefaultStateByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FetchDefaultStateByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.FetchDefaultStateByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DefaultState.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultState defaultState = 1;
 * @return {?proto.DefaultState}
 */
proto.FetchDefaultStateByIdResponse.prototype.getDefaultstate = function() {
  return /** @type{?proto.DefaultState} */ (
    jspb.Message.getWrapperField(this, proto.DefaultState, 1));
};


/** @param {?proto.DefaultState|undefined} value */
proto.FetchDefaultStateByIdResponse.prototype.setDefaultstate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.FetchDefaultStateByIdResponse.prototype.clearDefaultstate = function() {
  this.setDefaultstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FetchDefaultStateByIdResponse.prototype.hasDefaultstate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FetchDefaultStateBySlugRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FetchDefaultStateBySlugRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FetchDefaultStateBySlugRequest.displayName = 'proto.FetchDefaultStateBySlugRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FetchDefaultStateBySlugRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.FetchDefaultStateBySlugRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FetchDefaultStateBySlugRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.FetchDefaultStateBySlugRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FetchDefaultStateBySlugRequest}
 */
proto.FetchDefaultStateBySlugRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FetchDefaultStateBySlugRequest;
  return proto.FetchDefaultStateBySlugRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FetchDefaultStateBySlugRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FetchDefaultStateBySlugRequest}
 */
proto.FetchDefaultStateBySlugRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FetchDefaultStateBySlugRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FetchDefaultStateBySlugRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FetchDefaultStateBySlugRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.FetchDefaultStateBySlugRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.FetchDefaultStateBySlugRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FetchDefaultStateBySlugRequest.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FetchDefaultStateBySlugResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FetchDefaultStateBySlugResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FetchDefaultStateBySlugResponse.displayName = 'proto.FetchDefaultStateBySlugResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FetchDefaultStateBySlugResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.FetchDefaultStateBySlugResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FetchDefaultStateBySlugResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.FetchDefaultStateBySlugResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstate: (f = msg.getDefaultstate()) && proto.DefaultState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FetchDefaultStateBySlugResponse}
 */
proto.FetchDefaultStateBySlugResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FetchDefaultStateBySlugResponse;
  return proto.FetchDefaultStateBySlugResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FetchDefaultStateBySlugResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FetchDefaultStateBySlugResponse}
 */
proto.FetchDefaultStateBySlugResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DefaultState;
      reader.readMessage(value,proto.DefaultState.deserializeBinaryFromReader);
      msg.setDefaultstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FetchDefaultStateBySlugResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FetchDefaultStateBySlugResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FetchDefaultStateBySlugResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.FetchDefaultStateBySlugResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DefaultState.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultState defaultState = 1;
 * @return {?proto.DefaultState}
 */
proto.FetchDefaultStateBySlugResponse.prototype.getDefaultstate = function() {
  return /** @type{?proto.DefaultState} */ (
    jspb.Message.getWrapperField(this, proto.DefaultState, 1));
};


/** @param {?proto.DefaultState|undefined} value */
proto.FetchDefaultStateBySlugResponse.prototype.setDefaultstate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.FetchDefaultStateBySlugResponse.prototype.clearDefaultstate = function() {
  this.setDefaultstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FetchDefaultStateBySlugResponse.prototype.hasDefaultstate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CreateDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CreateDefaultStateRequest.displayName = 'proto.CreateDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.CreateDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, ""),
    matrixid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateDefaultStateRequest}
 */
proto.CreateDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateDefaultStateRequest;
  return proto.CreateDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateDefaultStateRequest}
 */
proto.CreateDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatrixid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.CreateDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMatrixid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.CreateDefaultStateRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CreateDefaultStateRequest.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 matrixId = 2;
 * @return {number}
 */
proto.CreateDefaultStateRequest.prototype.getMatrixid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CreateDefaultStateRequest.prototype.setMatrixid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CreateDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CreateDefaultStateResponse.displayName = 'proto.CreateDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.CreateDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstate: (f = msg.getDefaultstate()) && proto.DefaultState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateDefaultStateResponse}
 */
proto.CreateDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateDefaultStateResponse;
  return proto.CreateDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateDefaultStateResponse}
 */
proto.CreateDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DefaultState;
      reader.readMessage(value,proto.DefaultState.deserializeBinaryFromReader);
      msg.setDefaultstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.CreateDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DefaultState.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultState defaultState = 1;
 * @return {?proto.DefaultState}
 */
proto.CreateDefaultStateResponse.prototype.getDefaultstate = function() {
  return /** @type{?proto.DefaultState} */ (
    jspb.Message.getWrapperField(this, proto.DefaultState, 1));
};


/** @param {?proto.DefaultState|undefined} value */
proto.CreateDefaultStateResponse.prototype.setDefaultstate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CreateDefaultStateResponse.prototype.clearDefaultstate = function() {
  this.setDefaultstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CreateDefaultStateResponse.prototype.hasDefaultstate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RemoveDefaultStateRequest.displayName = 'proto.RemoveDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RemoveDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveDefaultStateRequest}
 */
proto.RemoveDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveDefaultStateRequest;
  return proto.RemoveDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveDefaultStateRequest}
 */
proto.RemoveDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RemoveDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.RemoveDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.RemoveDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RemoveDefaultStateResponse.displayName = 'proto.RemoveDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RemoveDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveDefaultStateResponse}
 */
proto.RemoveDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveDefaultStateResponse;
  return proto.RemoveDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveDefaultStateResponse}
 */
proto.RemoveDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RemoveDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.InsertVideoConnectionToDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.InsertVideoConnectionToDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.InsertVideoConnectionToDefaultStateRequest.displayName = 'proto.InsertVideoConnectionToDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.InsertVideoConnectionToDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.InsertVideoConnectionToDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.InsertVideoConnectionToDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    conportid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cpuportid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.InsertVideoConnectionToDefaultStateRequest}
 */
proto.InsertVideoConnectionToDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.InsertVideoConnectionToDefaultStateRequest;
  return proto.InsertVideoConnectionToDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.InsertVideoConnectionToDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.InsertVideoConnectionToDefaultStateRequest}
 */
proto.InsertVideoConnectionToDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConportid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCpuportid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.InsertVideoConnectionToDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.InsertVideoConnectionToDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.InsertVideoConnectionToDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getConportid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCpuportid();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 conPortId = 2;
 * @return {number}
 */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.getConportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.setConportid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 cpuPortId = 3;
 * @return {number}
 */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.getCpuportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.InsertVideoConnectionToDefaultStateRequest.prototype.setCpuportid = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.InsertVideoConnectionToDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.InsertVideoConnectionToDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.InsertVideoConnectionToDefaultStateResponse.displayName = 'proto.InsertVideoConnectionToDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.InsertVideoConnectionToDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.InsertVideoConnectionToDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.InsertVideoConnectionToDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.InsertVideoConnectionToDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.InsertVideoConnectionToDefaultStateResponse}
 */
proto.InsertVideoConnectionToDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.InsertVideoConnectionToDefaultStateResponse;
  return proto.InsertVideoConnectionToDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.InsertVideoConnectionToDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.InsertVideoConnectionToDefaultStateResponse}
 */
proto.InsertVideoConnectionToDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.InsertVideoConnectionToDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.InsertVideoConnectionToDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.InsertVideoConnectionToDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.InsertVideoConnectionToDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.InsertKvmConnectionToDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.InsertKvmConnectionToDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.InsertKvmConnectionToDefaultStateRequest.displayName = 'proto.InsertKvmConnectionToDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.InsertKvmConnectionToDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.InsertKvmConnectionToDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.InsertKvmConnectionToDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    conportid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cpuportid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.InsertKvmConnectionToDefaultStateRequest}
 */
proto.InsertKvmConnectionToDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.InsertKvmConnectionToDefaultStateRequest;
  return proto.InsertKvmConnectionToDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.InsertKvmConnectionToDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.InsertKvmConnectionToDefaultStateRequest}
 */
proto.InsertKvmConnectionToDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConportid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCpuportid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.InsertKvmConnectionToDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.InsertKvmConnectionToDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.InsertKvmConnectionToDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getConportid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCpuportid();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 conPortId = 2;
 * @return {number}
 */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.getConportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.setConportid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 cpuPortId = 3;
 * @return {number}
 */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.getCpuportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.InsertKvmConnectionToDefaultStateRequest.prototype.setCpuportid = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.InsertKvmConnectionToDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.InsertKvmConnectionToDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.InsertKvmConnectionToDefaultStateResponse.displayName = 'proto.InsertKvmConnectionToDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.InsertKvmConnectionToDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.InsertKvmConnectionToDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.InsertKvmConnectionToDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.InsertKvmConnectionToDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.InsertKvmConnectionToDefaultStateResponse}
 */
proto.InsertKvmConnectionToDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.InsertKvmConnectionToDefaultStateResponse;
  return proto.InsertKvmConnectionToDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.InsertKvmConnectionToDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.InsertKvmConnectionToDefaultStateResponse}
 */
proto.InsertKvmConnectionToDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.InsertKvmConnectionToDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.InsertKvmConnectionToDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.InsertKvmConnectionToDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.InsertKvmConnectionToDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveVideoConnectionFromDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveVideoConnectionFromDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RemoveVideoConnectionFromDefaultStateRequest.displayName = 'proto.RemoveVideoConnectionFromDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveVideoConnectionFromDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveVideoConnectionFromDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveVideoConnectionFromDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RemoveVideoConnectionFromDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveVideoConnectionFromDefaultStateRequest}
 */
proto.RemoveVideoConnectionFromDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveVideoConnectionFromDefaultStateRequest;
  return proto.RemoveVideoConnectionFromDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveVideoConnectionFromDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveVideoConnectionFromDefaultStateRequest}
 */
proto.RemoveVideoConnectionFromDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveVideoConnectionFromDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveVideoConnectionFromDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveVideoConnectionFromDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RemoveVideoConnectionFromDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.RemoveVideoConnectionFromDefaultStateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.RemoveVideoConnectionFromDefaultStateRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveVideoConnectionFromDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveVideoConnectionFromDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RemoveVideoConnectionFromDefaultStateResponse.displayName = 'proto.RemoveVideoConnectionFromDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveVideoConnectionFromDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveVideoConnectionFromDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveVideoConnectionFromDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RemoveVideoConnectionFromDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveVideoConnectionFromDefaultStateResponse}
 */
proto.RemoveVideoConnectionFromDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveVideoConnectionFromDefaultStateResponse;
  return proto.RemoveVideoConnectionFromDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveVideoConnectionFromDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveVideoConnectionFromDefaultStateResponse}
 */
proto.RemoveVideoConnectionFromDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveVideoConnectionFromDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveVideoConnectionFromDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveVideoConnectionFromDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RemoveVideoConnectionFromDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveKvmConnectionFromDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveKvmConnectionFromDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RemoveKvmConnectionFromDefaultStateRequest.displayName = 'proto.RemoveKvmConnectionFromDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveKvmConnectionFromDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveKvmConnectionFromDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveKvmConnectionFromDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RemoveKvmConnectionFromDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveKvmConnectionFromDefaultStateRequest}
 */
proto.RemoveKvmConnectionFromDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveKvmConnectionFromDefaultStateRequest;
  return proto.RemoveKvmConnectionFromDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveKvmConnectionFromDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveKvmConnectionFromDefaultStateRequest}
 */
proto.RemoveKvmConnectionFromDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveKvmConnectionFromDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveKvmConnectionFromDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveKvmConnectionFromDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RemoveKvmConnectionFromDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.RemoveKvmConnectionFromDefaultStateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.RemoveKvmConnectionFromDefaultStateRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveKvmConnectionFromDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveKvmConnectionFromDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RemoveKvmConnectionFromDefaultStateResponse.displayName = 'proto.RemoveKvmConnectionFromDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveKvmConnectionFromDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveKvmConnectionFromDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveKvmConnectionFromDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.RemoveKvmConnectionFromDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveKvmConnectionFromDefaultStateResponse}
 */
proto.RemoveKvmConnectionFromDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveKvmConnectionFromDefaultStateResponse;
  return proto.RemoveKvmConnectionFromDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveKvmConnectionFromDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveKvmConnectionFromDefaultStateResponse}
 */
proto.RemoveKvmConnectionFromDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveKvmConnectionFromDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveKvmConnectionFromDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveKvmConnectionFromDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.RemoveKvmConnectionFromDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExecuteDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExecuteDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ExecuteDefaultStateRequest.displayName = 'proto.ExecuteDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExecuteDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ExecuteDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExecuteDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.ExecuteDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExecuteDefaultStateRequest}
 */
proto.ExecuteDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExecuteDefaultStateRequest;
  return proto.ExecuteDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExecuteDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExecuteDefaultStateRequest}
 */
proto.ExecuteDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExecuteDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExecuteDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExecuteDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.ExecuteDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.ExecuteDefaultStateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ExecuteDefaultStateRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExecuteDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExecuteDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ExecuteDefaultStateResponse.displayName = 'proto.ExecuteDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExecuteDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ExecuteDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExecuteDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.ExecuteDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExecuteDefaultStateResponse}
 */
proto.ExecuteDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExecuteDefaultStateResponse;
  return proto.ExecuteDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExecuteDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExecuteDefaultStateResponse}
 */
proto.ExecuteDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExecuteDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExecuteDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExecuteDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.ExecuteDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto);
